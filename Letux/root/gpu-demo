#!/bin/bash
#
# start PVR SGX GPU
# and run some demo
#
# usage: gpu-demo
#
# WARNING: this loads and installs packages with NON-FREE
# firmware for the SGX libraries and runtime support
#
# It needs a kernel where the GPL'ed SGX kernel driver is
# properly configured.
#

SCRIPTPATH="$(dirname "$0")"

if ! [ "$(dpkg -s libdrm2 2>/dev/null)" ]
then
	yes | apt-get install letux-base libdrm2 libdrm-omap1 libgbm1 wget tar xz-utils   # needs some active internet connection (ethernet over USB, wwan, wlan)
fi

# we need a more recent libdrm2 on plain jessie
case $(dpkg -s libdrm2 2>/dev/null | grep '^Version:') in
	'Version: '2.4.58-* )
		apt-get -t jessie-backports install --reinstall libdrm2
		;;
esac

# autodetect package version to load (so far omap only)
COMPATIBLE=omap_$(egrep -ao '[a-z0-9]*-sgx[0-9]*-[0-9]*' </proc/device-tree/ocp*/target-module@5*/sgx@*/compatible | tr '-' '_')	# match sgx@
# could use modprobe -c | fgrep ti,$COMPATIBLE | head 1 | cut ... to translate
MODULE=pvrsrvkm_$COMPATIBLE
echo compatible driver: $COMPATIBLE
echo module name: $MODULE

# fetch the microkernel binary and libraries
if ! [ "$(which pvrsrvctl)" ]
then
	(cd / || exit
	wget -O sgx.tar.xz https://packages.pyra-handheld.com/images/extra/sgx.tar.xz
	tar xvJf sgx.tar.xz
	cp -R sgx/pvr/etc sgx/pvr/lib .
	cp -R sgx/pvr/bin sgx/pvr/include ./usr
	ln -sf libgbm.so.1 usr/lib/arm-linux-gnueabihf/libgbm.so.2    # there is (will be) no libgbm.so.2 in Debian
	) || exit
fi

# if kernel module was blacklisted, load it now
lsmod | fgrep -q pvrsrvkm_ || modprobe $MODULE

## start pvr, if not yet
: which pvrsrvctl
fgrep -q 'System Version String: None' /proc/pvr/version && pvrsrvctl --start --no-module

# report some infos
fgrep "System Version String: " /proc/pvr/version

PATH=$PATH:/opt/img-powervr-sdk/Examples/Advanced/NullWS/

. $SCRIPTPATH/x		# needed by eglinfo

# run some demos
for i in sgx_clipblit_test gles1test1 gles2test1 eglinfo kmscube OGLES2Water
do
	if [ "$(which $i)" ]
	then
		echo "*** $0: running $i ***"
		timeout 10 $i
	fi
done

# pvrsrvctl --stop

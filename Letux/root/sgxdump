#!/bin/bash

function machine {
	MACHINE="$([ -r /sys/devices/soc0/machine ] && tr -d '\0' </sys/devices/soc0/machine)"
	[ "$MACHINE" ] || MACHINE=$(tr -d '\0' </proc/device-tree/model 2>/dev/null)
	[ "$MACHINE" ] || MACHINE=$(fgrep "system type" /proc/cpuinfo)
	echo $MACHINE
}

function registers {
# check which SoC we are running on and
# provide list of registers (addr + name)

case "$(machine)" in

AM335X )

echo on > /sys/bus/platform/devices/5600fe00.target-module/power/control
cat <<END
44E00900	CM_GFX_L3_CLKSTCTRL
44E00904	CM_GFX_GFX_CLKCTRL
44E0090c	CM_GFX_L4LS_GFX_CLKSTCTR
44E00910	CM_GFX_MMUCFG_CLKCTRL
44E00914	CM_GFX_MMUDATA_CLKCTRL
44E0052c	CM_DPLL.CLKSEL_GFX_FCLK
44E01100	PM_GFX_PWRSTCTRL
44E01104	RM_GFX_RSTCTRL
44E01110	PM_GFX_PWRSTST
5600fe14	SGX_CORE_VERSION
5600fe00	OCP_REVISION
5600fe04	OCP_HWINFO
5600fe10	OCP_SYSCONFIG
5600fe24	OCP_IRQSTATUS_RA_0
5600fe28	OCP_IRQSTATUS_RA_1
5600fe2c	OCP_IRQSTATUS_RA_2
5600fe30	OCP_IRQSTATUS_0
5600fe34	OCP_IRQSTATUS_1
5600fe38	OCP_IRQSTATUS_2
5600fe3c	OCP_IRQENABLE_SET_0
5600fe40	OCP_IRQENABLE_SET_1
5600fe44	OCP_IRQENABLE_SET_2
5600fe48	OCP_IRQENABLE_CLR_0
5600fe4c	OCP_IRQENABLE_CLR_1
5600fe50	OCP_IRQENABLE_CLR_2
5600ff00	OCP_PAGE_CONFIG
5600ff04	OCP_INTERRUPT_EVENT
5600ff08	OCP_DEBUG_CONFIG
5600ff0c	OCP_DEBUG_STATUS
56000010	SGX_CORE_VERSION
56000014	SGX_CORE_REVISION
END
;;

OMAP3430/3530 )
echo on > /sys/bus/platform/devices/50000014.target-module/power/control

# seems as if there are no (readable) OCP registers on omap34xx
# 50000014 is the SGX core version: https://e2e.ti.com/support/legacy_forums/omap/f/447/p/230093/812443#812443

cat <<END
48004B00	CM_FCLKEN_SGX
48004B10	CM_ICLKEN_SGX
48004B20	CM_IDLEST_SGX
48004B40	CM_CLKSEL_SGX
48004B44	CM_SLEEPDEP_SGX
48004B48	CM_CLKSTCTRL_SGX
48004b4c	CM_CLKSTST_SGX
48306b58	RM_RSTST_SGX
48306bc8	PM_WKDEP_SGX
48306be0	PM_PWSTCTRL_SGX
48306be4	PM_PWSTST_SGX
48306be8	PM_PREPWSTST_SGX
50000010	SGX_CORE_VERSION
50000014	SGX_CORE_REVISION
END
;;

OMAP3630/DM3730 )
echo on > /sys/bus/platform/devices/5000fe00.target-module/power/control

# see DM37x TRM section 8.4 SGX Register Manual

cat <<END
48004B00	CM_FCLKEN_SGX
48004B10	CM_ICLKEN_SGX
48004B20	CM_IDLEST_SGX
48004B40	CM_CLKSEL_SGX
48004B44	CM_SLEEPDEP_SGX
48004B48	CM_CLKSTCTRL_SGX
48004b4c	CM_CLKSTST_SGX
48306b58	RM_RSTST_SGX
48306bc8	PM_WKDEP_SGX
48306be0	PM_PWSTCTRL_SGX
48306be4	PM_PWSTST_SGX
48306be8	PM_PREPWSTST_SGX
5000fe00	OCP_REVISION
5000fe04	OCP_HWINFO
5000fe10	OCP_SYSCONFIG
5000fe24	OCP_IRQSTATUS_RA_0
5000fe28	OCP_IRQSTATUS_RA_1
5000fe2c	OCP_IRQSTATUS_RA_2
5000fe30	OCP_IRQSTATUS_0
5000fe34	OCP_IRQSTATUS_1
5000fe38	OCP_IRQSTATUS_2
5000fe3c	OCP_IRQENABLE_SET_0
5000fe40	OCP_IRQENABLE_SET_1
5000fe44	OCP_IRQENABLE_SET_2
5000fe48	OCP_IRQENABLE_CLR_0
5000fe4c	OCP_IRQENABLE_CLR_1
5000fe50	OCP_IRQENABLE_CLR_2
5000ff00	OCP_PAGE_CONFIG
5000ff04	OCP_INTERRUPT_EVENT
5000ff08	OCP_DEBUG_CONFIG
5000ff0c	OCP_DEBUG_STATUS
50000010	SGX_CORE_VERSION
50000014	SGX_CORE_REVISION
END
;;

OMAP4* )
echo on > /sys/bus/platform/devices/5601fc00.target-module/power/control
cat <<END
4a009200	CM_CLKSTCTRL_SGX
4a009204	CM_STATICDEP_SGX
4a009208	CM_DYNAMICDEP_SGX
4a009220	CM_SGX_CLKCTRL_SGX
4a307200	PM_PWSTCTRL_SGX
4a307204	PM_PWSTST_SGX
4a307224	PM_SGX_CONTEXT
5600fe00	OCP_REVISION
5600fe04	OCP_HWINFO
5600fe10	OCP_SYSCONFIG
5600fe24	OCP_IRQSTATUS_RA_0
5600fe28	OCP_IRQSTATUS_RA_1
5600fe2c	OCP_IRQSTATUS_RA_2
5600fe30	OCP_IRQSTATUS_0
5600fe34	OCP_IRQSTATUS_1
5600fe38	OCP_IRQSTATUS_2
5600fe3c	OCP_IRQENABLE_SET_0
5600fe40	OCP_IRQENABLE_SET_1
5600fe44	OCP_IRQENABLE_SET_2
5600fe48	OCP_IRQENABLE_CLR_0
5600fe4c	OCP_IRQENABLE_CLR_1
5600fe50	OCP_IRQENABLE_CLR_2
5600ff00	OCP_PAGE_CONFIG
5600ff04	OCP_INTERRUPT_EVENT
5600ff08	OCP_DEBUG_CONFIG
5600ff0c	OCP_DEBUG_STATUS
56000020	SGX_CORE_VERSION
56000024	SGX_CORE_REVISION
END
;;

OMAP5* )
echo on > /sys/bus/platform/devices/5600fe00.target-module/power/control
cat <<END
5600fe00	OCP_REVISION
5600fe04	OCP_HWINFO
5600fe10	OCP_SYSCONFIG
5600fe24	OCP_IRQSTATUS_RA_0
5600fe28	OCP_IRQSTATUS_RA_1
5600fe2c	OCP_IRQSTATUS_RA_2
5600fe30	OCP_IRQSTATUS_0
5600fe34	OCP_IRQSTATUS_1
5600fe38	OCP_IRQSTATUS_2
5600fe3c	OCP_IRQENABLE_SET_0
5600fe40	OCP_IRQENABLE_SET_1
5600fe44	OCP_IRQENABLE_SET_2
5600fe48	OCP_IRQENABLE_CLR_0
5600fe4c	OCP_IRQENABLE_CLR_1
5600fe50	OCP_IRQENABLE_CLR_2
5600ff00	OCP_PAGE_CONFIG
5600ff04	OCP_INTERRUPT_EVENT
5600ff08	OCP_DEBUG_CONFIG
5600ff0c	OCP_DEBUG_STATUS
# unclear: can only be read after running the sgxdemo once - kernel hangs otherwise
#56000020	SGX_CORE_VERSION
#56000024	SGX_CORE_REVISION
END
;;

*JZ4780* )
cat <<END
13040020	SGX_CORE_VERSION
13040024	SGX_CORE_REVISION
END
;;

*)
echo "unknown machine $MACHINE" >&2
exit 1
;;

esac
}

case "$(machine)" in
AM335X )		M=am335x;;
OMAP3430/3530 )		M=omap34xx/35xx;;
OMAP3630/DM3730 )	M=am/dm37xx;;
OMAP4* )		M=omap4;;
OMAP5* )		M=omap5;;
*JZ4780* )		M=jz4780;;
* )			M=unknown;;
esac

echo "*** SGX Register Dump on $M ***"

registers | (
while read ADDR REGISTER COMMENT
do
	case "$ADDR" in
	'#'* )	;;
	* )
		ADDR=0x$ADDR
		VAL=$(devmem2 $ADDR w | fgrep 'Value at address' | cut -d ' ' -f 6)
		VAL=$(printf %08x $[$VAL])
		echo $ADDR $VAL $REGISTER $COMMENT
		[ "$REGISTER" = SGX_CORE_VERSION ] && VERSION="$VAL"
		[ "$REGISTER" = SGX_CORE_REVISION ] && REVISION="$VAL"
		;;
	esac
done

# echo $VERSION $REVISION

if [ "$VERSION" -a "$REVISION" ]
then
# echo "Version = $VERSION"
# echo "Revision = $REVISION"
	REV=$(echo "$REVISION" | sed 's/0*\(.\)0\(.\)0\(.\)/\1\2\3/')
# genauer Code nicht bekannt...
	case "$VERSION" in
		01110000 ) SGX=520;;
		01120000 ) SGX=530;;
		01130000 ) SGX=535;;
		01140000 ) SGX=540;;
		01150000 ) SGX=544;;
		01160000 ) SGX=545;;
	esac
	if [ "$SGX" ]
	then
		echo "pvr sgx$SGX-$REV found inside $M";
	else
		echo "no sgx found ($VERSION $REVISION)";
	fi
fi
)
